#Описание на клас:
class MyClass:
    #Конструктор:
    def __init__(self): #Init method is also called CONSTRUCTOR
        self.value = 123
        print(f'Създава се обект: {self.value}')
    #Destructor/Деструктор:
    def __del__(self):
        print(f'Изтрива се обект {self.value}') #Del method is also called DESTRUCTOR
    #Метод за присвояване на стойност на полето:
    def set(self,n):
        self.value = n

    #Метод за показване на стойността на полето:
    def show(self):
        print(f"Поле на обекта: {self.value}")
#Създаване на обект:
obj = MyClass()
#Извикване на методите от обекта:
obj.show()
obj.set(100)
#Извикване на методите ОТ КЛАСА:
MyClass.show(obj)
MyClass.set(obj, 200)

#Проверка на стойността на полето:
obj.show()

#Явно извикване на конструктора:
MyClass.__init__(obj)
#Явно извикване на деструктора:
MyClass.__del__(obj)

#Проверка на стойността на полето:
obj.show()

#Изменение на стойността на полето:
obj.value = 321
obj.show()

#Явно извикване на конструктора чрез обекта:
obj.__init__()

#Явно извикване на деструктора чрез обекта:
obj.__del__()

#Важно е да се подчертае, че само по себе си извикването на конструктора или деконструктора не води съответно до създаването/изтриването на обект.
#Конструкторът е метод, който се извиква автоматично непосредствено след създаването на обекта, а деструкторът е метод, който се извиква автоматично непосредсвтвено преди изтриването на обекта.

#Проверка на стойноста на полето:
obj.show()